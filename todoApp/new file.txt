[disabled]="!canAddCar" - [] - постоянно следит за переменной
--------------------------------------------------------------
<input type="text" class="form-control" (keyup)="onKeyUp($event)">
<input type="text" class="form-control" (input)="onKeyUp($event)">
<input type="text" class="form-control" (keyup.enter)="onKeyUp($event)"> - по нажатию
  onKeyUp(event) {
    this.inputText = event.target.value;
  }

 или

   onKeyUp(event: Event) {
     this.inputText = (<HTMLInputElement>event.target).value;
   }
--------------------------------------------------------------
import { FormsModule} from "@angular/forms";
<input type="text" class="form-control" [(ngModel)]="inputText">
two-way binding
--------------------------------------------------------------
  <p *ngIf="addCarStatus">Добавлена</p>
  <p *ngIf="!addCarStatus">Не добавлена</p>

  или

  <p *ngIf="!addCarStatus; else succesStatus">Не добавлена</p>
  <ng-template #succesStatus>
    <p>Добавлена</p>
  </ng-template>
--------------------------------------------------------------
<app-car *ngFor="let car of cars"></app-car> - шаблон несколько раз
<app-car *ngFor="let car of cars; let idx = index"></app-car> - создать индекс
--------------------------------------------------------------
class and style

  <ul>
    <li *ngFor="let car of cars; let idx = index">
      <div
          [ngStyle]="{backgroundColor: (idx+1) % 2 === 0 ? 'red' : 'green', 'color': 'white'}"
          [ngClass]="{'bigText': setBigCarText(car)}"
      >
        <b>{{idx+1}}</b> - {{car}}
      </div>
    </li>
  </ul>
--------------------------------------------------------------
пайпы
    <li *ngFor="let item of items; let idx = index">
        <b>{{idx+1}}</b> - {{item | date:'medium'}}
    </li>
    <li>
      {{testForPipesString | lowercase}} {{testForPipesString | uppercase}}
    </li>
--------------------------------------------------------------
массив объектов в ts cars: {name: string, year: number}[]
--------------------------------------------------------------
прокидываем данные вниз
<app-car *ngFor="let car of cars" [car]="car"></app-car>
в самом
@Input() carItem: {name: string, year: number};
--------------------------------------------------------------
//encapsulation =  ViewEncapsulation = None - применяем стили глобально из компонента
//encapsulation =  ViewEncapsulation = Native - игнорируем внешние стили
--------------------------------------------------------------
прокидываем данные вверх
<input type="text" class="form-control" #carNameInput>
<input type="text" class="form-control" [(ngModel)]="carYear">

@Output('onAddCar') carEmitter = new EventEmitter<{name: string, year: number}>();

  addCar(carNameEl: HTMLInputElement) {
    this.carEmitter.emit({name: carNameEl.value, year: this.carYear})
    carNameEl.value = '';
    this.carYear = 2018;
  }
--------------------------------------------------------------
получение HTML
<input type="text" class="form-control" #carNameInput>
<input type="text" class="form-control" #carYearInput>


  @ViewChild('carYearInput') carYearInput: ElementRef;

  addCar(carNameEl: HTMLInputElement) {
    this.carEmitter.emit({name: carNameEl.value, year: +this.carYearInput.nativeElement.value})
    carNameEl.value = '';
    this.carYearInput.nativeElement.value = 2018;
  }
--------------------------------------------------------------
чтобы получить что внутри
<div class="list-group">
  <app-car class="list-group-item" *ngFor="let car of cars" [carItem]="car">
    <div class="alert alert-info">Эта машина продана</div>
  </app-car>
</div>

<ng-content></ng-content>
//получить данные через референцию через @ContentChild

--------------------------------------------------------------
ЖЦ

import {
  Component,
  Input,
  OnChanges,
  OnInit,
  SimpleChanges,
  DoCheck,
  AfterContentInit,
  AfterContentChecked,
  AfterViewInit,
  AfterViewChecked,
  OnDestroy
} from '@angular/core';

@Component({
  selector: 'app-car',
  templateUrl: './car.component.html',
  styleUrls: ['./car.component.scss']
})
export class CarComponent implements
  OnInit,
  OnChanges,
  DoCheck,
  AfterContentInit,
  AfterContentChecked,
  AfterViewInit,
  AfterViewChecked,
  OnDestroy {

 @Input() carItem: {name: string, year: number};

 //вызывается первым
 constructor() {
   console.log('constructor');
 }

 //вызывается при инициализации - второй
  ngOnInit() {
    console.log('ngOnInit');
  }

  //вызывается при изменении компонента
  ngOnChanges(changes: SimpleChanges) {
    console.log('ngOnChanges', changes);
  }

  //вызывается также при изменении компонента, большую логику сюда не писать
  ngDoCheck() {
    console.log('ngDoCheck');
  }

  //при подгрузке данных
  ngAfterContentInit() {
    console.log('AfterContentInit');
  }

  // после подгрузки данных, при изменении
  ngAfterContentChecked() {
    console.log('AfterContentChecked');
  }

  //при подгрузке данных в шаблон
  ngAfterViewInit() {
    console.log('AfterViewInit');
  }

  // после подгрузки данных, при изменении в шаблоне
  ngAfterViewChecked() {
    console.log('AfterViewChecked');
  }

  // перед тем как компонент удаляется(отписывается здесь от прослушек)
  ngOnDestroy() {
    console.log('ngOnDestroy');
  }

}
--------------------------------------------------------------
Директива

<div appBackground>{{title}}</div>

import {Directive, ElementRef, HostListener, OnInit, Renderer2, HostBinding, Input} from "@angular/core";

@Directive({
  selector: '[appBackground]',
})


export class BackgroundDirective implements OnInit {

  @HostBinding('style.backgroundColor') background: string;

  constructor(private element: ElementRef, private renderer: Renderer2) {}

  ngOnInit() {
    // const {nativeElement} = this.element;
    // this.renderer.setStyle(nativeElement, 'background-color', 'blue'); // хороший способ
    // //this.element.nativeElement.style.backgroundColor = 'red'; плохой способ
    // this.renderer.addClass(nativeElement, 'white-text');
  }


  @HostListener('mouseenter', ['$event']) mouseEnter(event: Event) {
    //const {nativeElement} = this.element;
    //this.renderer.setStyle(nativeElement, 'background-color', 'blue'); // хороший способ
    //this.element.nativeElement.style.backgroundColor = 'red'; плохой способ
    //this.renderer.addClass(nativeElement, 'white-text');
    this.background = 'red';
  }

  @HostListener('mouseleave', ['$event']) mouseLeave(event: Event) {
    //const {nativeElement} = this.element;
    //this.renderer.setStyle(nativeElement, 'background-color', 'transparent'); // хороший способ
    //this.element.nativeElement.style.backgroundColor = 'red'; плохой способ
    //this.renderer.removeClass(nativeElement, 'white-text');
    this.background = 'blue';
  }


  //Директива пользуется двумя жц OnInit и OnDestroy
}
--------------------------------------------------------------
*ngSwitch
      <ul class="list-group">
        <li *ngFor="let item of items" (click)="onClick(item)"  class="list-group-item">{{item}}</li>
      </ul>

      <div [ngSwitch]="current">
        <p *ngSwitchCase="1">1</p>
        <p *ngSwitchCase="2">2</p>
        <p *ngSwitchCase="3">3</p>
        <p *ngSwitchDefault>4 5</p>
      </div>


      export class AppComponent {
        title = 'MyProject';
        items: number[] = [1, 2, 3, 4, 5];
        current: number = 0;

        onClick(number: number) {
          this.current = number;
        }
      };
--------------------------------------------------------------
Директива передача параметров
<div appBackground [hoverColor]="'red'" [defaultColor]="'transparent'">{{title}}</div>

export class BackgroundDirective implements OnInit {

  @Input() hoverColor: string = 'green';
  @Input() defaultColor: string = 'transparent';

  @HostBinding('style.backgroundColor') background: string;

  constructor(private element: ElementRef, private renderer: Renderer2) {}

  ngOnInit() {
    this.background = this.defaultColor;
  }


  @HostListener('mouseenter', ['$event']) mouseEnter(event: Event) {
    this.background = this.hoverColor;
  }

  @HostListener('mouseleave', ['$event']) mouseLeave(event: Event) {
    this.background = this.defaultColor;
  }


  //Директива пользуется двумя жц OnInit и OnDestroy
}
--------------------------------------------------------------
Пайпы

    <div class="col-s-12">

      <h2>name</h2>
       <p>1) {{ name | lowercase}}</p>
       <p>2) {{ name | uppercase}}</p>
       <p>3) {{ name | slice:0:4}}</p>
       <p>4) {{ name | slice:0:4 | uppercase }}</p>
       <hr>
      <h2>pi</h2>
        <p>1) {{ pi | number }}</p>
        <p>2) {{ pi | number:'1.3-4' }}</p>
        <p>3) {{ pi | number:'2.2-2' }}</p>
        <hr>
      <h2>money</h2>
        <p>1) {{ money | currency:'USD':false }}</p>
        <p>2) {{ money | currency:'USD':true }}</p>
        <hr>
      <h2>date</h2>
        <p>1) {{ date | date }}</p>
        <p>2) {{ date | date:'fullDate' }}</p>
        <p>3) {{ date | date:'shortDate' }}</p>
        <p>4) {{ date | date:'shortTime' }}</p>
        <hr>
      <h2>amount</h2>
        <p>{{ amount | percent}}</p>
        <hr>
      <h2>object</h2>
        <pre>{{ object | json }}</pre>
        <p>{{ object | json }}</p>
    </div>


    export class AppComponent {
      name = 'MySuperString';
      pi = Math.PI;
      money = 350;
      date = new Date ();
      amount = 0.45;
      object = {
        foo: 'bar',
        baz: 'qux',
        nested:
          {
            xyz: 3,
            numbers: [1, 2, 3]
          }
      };
    };

--------------------------------------------------------------
Свой пайп

<h2>NUM</h2>
<p>1) {{ num | appPow }}</p>
<p>2) {{ num | appPow:3 }}</p>
<p>3) {{ num | appPow:3:'=' }}</p>

import {Pipe, PipeTransform} from '@angular/core';

@Pipe({
  name: 'appPow'
})
export class PowPipe implements PipeTransform {

  transform(value: any, powNumber: number = 1, symb: string = '') {
    return symb + Math.pow(value, powNumber);
  }

}
--------------------------------------------------------------
Динамический пайп, фильтр

      <input type="text" class="form-control" [(ngModel)]="searchCar">
      <hr>
      <ul class="list-group">
        <li class="list-group-item" *ngFor="let car of cars | appPow:searchCar:'name'; let i = index">
          <b>{{i + 1}} </b>{{car.name}}
        </li>
      </ul>

      export class PowPipe implements PipeTransform {

        transform(carList, searchString: string = '', fieldName: string) {
          if (carList.length === 0 || searchString === '') {
            return carList;
          }

          return carList.filter(car => car[fieldName].toLowerCase().indexOf(searchString.toLowerCase()) !== -1));
        }

      }
--------------------------------------------------------------
@Pipe({
  name: 'appPow',
  pure: false //обновлять пайп при изменении массива
})
--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------
--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------
--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------
--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------
--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------

--------------------------------------------------------------






